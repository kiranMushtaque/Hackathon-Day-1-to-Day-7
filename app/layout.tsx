// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// import Footer from "./components/footer";
// import Navbar from "./navbar/page";
// import { CartProvider } from "./context/CartContext";

// import { WishlistProvider } from "./WishlistContext";
// import { ReviewsProvider } from "./context/ReviewsContext";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         <ReviewsProvider>
//           <CartProvider>
//             <WishlistProvider>
//               <Navbar />
//               {children}
//               <Footer />
//             </WishlistProvider>
//           </CartProvider>
//         </ReviewsProvider>

//       </body>
//     </html>
//   );
// }

// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// import Footer from "./components/footer";
// import Navbar from "./navbar/page";
// import { CartProvider } from "./context/CartContext";

// import { WishlistProvider } from "./WishlistContext";
// import { ReviewsProvider } from "./context/ReviewsContext";
// import { AuthProvider } from "./context/AuthContext";

// import {
//   ClerkProvider,
//   SignInButton,
//   SignedIn,
//   SignedOut,
//   UserButton,
// } from "@clerk/nextjs";
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         <AuthProvider>
//           <ClerkProvider>
//             <SignedOut></SignedOut>

//             <UserButton />

//             <ReviewsProvider>
//               <CartProvider>
//                 <WishlistProvider>
//                   <Navbar />
//                   {children}
//                   <Footer />
//                 </WishlistProvider>
//               </CartProvider>
//             </ReviewsProvider>
//           </ClerkProvider>
//         </AuthProvider>
//       </body>
//     </html>
//   );
// }

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import Footer from "./components/footer";
import Navbar from "./navbar/page";
import { CartProvider } from "./context/CartContext";

import { WishlistProvider } from "./WishlistContext";
import { ReviewsProvider } from "./context/ReviewsContext";



import {
  ClerkProvider,

  SignedOut,

} from "@clerk/nextjs";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
      
          <ClerkProvider>
            <ReviewsProvider>
              <CartProvider>
                <WishlistProvider>
                  <Navbar />
                  {children}
                  <Footer />
                </WishlistProvider>
              </CartProvider>
            </ReviewsProvider>
          </ClerkProvider>

   
      
      </body>
    </html>
  );
}
